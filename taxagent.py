#!/usr/bin/env python
# coding: utf-8

# In[3]:


get_ipython().run_cell_magic('writefile', 'taxagent.py', 'import streamlit as st\nimport pandas as pd\n\nst.set_page_config(page_title="Income Tax Calculator FY 2024-25", layout="wide")\nst.title("💰 Indian Income Tax Calculator (FY 2024–25, AY 2025–26)")\n\n# -------------------------\n# Instructions for Users\n# -------------------------\nst.header("ℹ️ Instructions & Tax Rules")\n\nst.markdown("""\n### Residency Status\n- **Resident (R):** Taxed on **global income**.  \n- **Non-Resident (NR):** Taxed only on **Indian income**.  \n- **Resident but Not Ordinarily Resident (RNOR):** Taxed on **Indian income + foreign income received in India**.  \n\n### Tax Regimes\n**New Tax Regime (Default):**\n- Standard deduction ₹75,000 (for salaried individuals)  \n- Minimal deductions allowed  \n- Section 87A rebate up to ₹25,000 if taxable income ≤ ₹7,00,000  \n- Slabs (FY 2024–25):  \n  - 0–3,00,000 → Nil  \n  - 3,00,001–7,00,000 → 5%  \n  - 7,00,001–10,00,000 → 10%  \n  - 10,00,001–12,00,000 → 15%  \n  - 12,00,001–15,00,000 → 20%  \n  - Above 15,00,000 → 30%  \n\n**Old Tax Regime (Optional):**\n- Standard deduction ₹50,000  \n- Allows deductions under 80C, 80D, HRA, home loan interest, etc.  \n- Section 87A rebate up to ₹12,500 if taxable income ≤ ₹5,00,000  \n- Slabs for individuals <60 years (NR taxed same as R):  \n  - 0–2,50,000 → Nil  \n  - 2,50,001–5,00,000 → 5%  \n  - 5,00,001–10,00,000 → 20%  \n  - Above 10,00,000 → 30%  \n\n*Senior and super senior citizens have higher exemption limits.*\n""")\n\n# -------------------------\n# User Info\n# -------------------------\nst.sidebar.header("User Information")\nres_status = st.sidebar.selectbox("Residency Status", ["Resident", "Non-Resident", "Resident but Not Ordinarily Resident"])\nage = st.sidebar.selectbox("Age Category", ["Below 60", "Senior (60-80)", "Super Senior (80+)"])\n\n# -------------------------\n# Input Income Sections\n# -------------------------\nst.header("Salary Income")\nsalary_monthly = st.number_input("Monthly Salary (Basic + DA) ₹", 0, step=1000)\nbonus = st.number_input("Annual Bonus ₹", 0, step=1000)\nsalary_total = salary_monthly * 12 + bonus\nst.write(f"Total Salary Income: ₹{salary_total:,}")\n\nst.header("House Property Income")\nrent_received = st.number_input("Annual Rent Received (₹)", 0, step=1000)\nmunicipal_taxes = st.number_input("Municipal Taxes Paid (₹)", 0, step=500)\nloan_interest = st.number_input("Home Loan Interest (₹)", 0, step=1000)\nnav = max(0, rent_received - municipal_taxes)\nhouse_income = nav - 0.3 * nav - loan_interest\nst.write(f"Net House Property Income: ₹{house_income:,}")\n\nst.header("Business/Professional Income")\nbusiness_income = st.number_input("Net Business/Professional Income ₹", 0, step=1000)\n\nst.header("Capital Gains")\nstcg = st.number_input("Short-Term Capital Gains (STCG, Sec 111A) ₹", 0, step=1000)\nltcg = st.number_input("Long-Term Capital Gains (LTCG, Sec 112A) ₹", 0, step=1000)\nltcg_taxable = max(0, ltcg - 100000)\n\nst.header("Other Income & Deductions")\nother_income = st.number_input("Other Income (FD, Savings Interest, Dividends) ₹", 0, step=1000)\nded_80c = st.number_input("80C Investments ₹", 0, step=1000)\nded_80d = st.number_input("80D Medical Insurance ₹", 0, step=1000)\nded_80tta = st.number_input("80TTA/TTB Savings Interest Deduction ₹", 0, step=1000)\n\n# -------------------------\n# Compute Taxable Income\n# -------------------------\ngross_income = salary_total + house_income + business_income + other_income\n\ndeductions_old = min(150000, ded_80c) + ded_80d + ded_80tta + 50000  # std deduction included\ntaxable_old = max(0, gross_income - deductions_old)\ntaxable_new = max(0, gross_income - 75000)  # new regime standard deduction\n\nst.subheader("Taxable Income")\nst.write(f"Old Regime Taxable Income: ₹{taxable_old:,}")\nst.write(f"New Regime Taxable Income: ₹{taxable_new:,}")\n\n# -------------------------\n# Tax Calculation Functions\n# -------------------------\ndef compute_old_tax(income, age_cat):\n    tax, breakdown = 0, []\n    if age_cat == "Below 60" or res_status != "Resident":\n        slabs = [(250000, 0.05), (500000, 0.2), (float("inf"), 0.3)]\n        base_exemption = 250000\n    elif age_cat == "Senior (60-80)":\n        slabs = [(200000, 0.05), (500000, 0.2), (float("inf"), 0.3)]\n        base_exemption = 300000\n    else:  # Super Senior\n        slabs = [(500000, 0.2), (float("inf"), 0.3)]\n        base_exemption = 500000\n\n    limit = base_exemption\n    for slab, rate in slabs:\n        if income > limit:\n            taxable = min(income - limit, slab if slab != float("inf") else income - limit)\n            tax += taxable * rate\n            breakdown.append((limit+1, limit+slab if slab != float("inf") else income, rate*100, taxable*rate))\n            limit += slab if slab != float("inf") else income - limit\n\n    if res_status == "Resident" and income <= 500000:  # 87A rebate\n        rebate = min(12500, tax)\n        tax -= rebate\n        breakdown.append(("87A Rebate", rebate))\n    return tax, breakdown\n\ndef compute_new_tax(income):\n    tax, breakdown = 0, []\n    slabs = [(300000, 0.05), (400000, 0.1), (300000, 0.15),\n             (300000, 0.2), (300000, 0.3)]\n    limit = 300000\n    for slab, rate in slabs:\n        if income > limit:\n            taxable = min(income - limit, slab)\n            tax += taxable * rate\n            breakdown.append((limit+1, limit+slab, rate*100, taxable*rate))\n            limit += slab\n    if res_status == "Resident" and income <= 700000:\n        rebate = min(25000, tax)\n        tax -= rebate\n        breakdown.append(("87A Rebate", rebate))\n    return tax, breakdown\n\n# -------------------------\n# Compute Tax\n# -------------------------\ntax_old, breakdown_old = compute_old_tax(taxable_old, age)\ntax_new, breakdown_new = compute_new_tax(taxable_new)\n\n# Add CGT\ntax_old += 0.15*stcg + 0.10*ltcg_taxable\ntax_new += 0.15*stcg + 0.10*ltcg_taxable\n\n# -------------------------\n# Display Slab-wise Tax\n# -------------------------\nst.subheader("Old Regime Slab-wise Tax")\nfor row in breakdown_old:\n    st.write(row)\n\nst.subheader("New Regime Slab-wise Tax")\nfor row in breakdown_new:\n    st.write(row)\n\n# -------------------------\n# Final Tax Comparison\n# -------------------------\nst.subheader("Final Tax")\nst.write(f"Old Regime Tax (incl. CGT): ₹{tax_old:,}")\nst.write(f"New Regime Tax (incl. CGT): ₹{tax_new:,}")\n\nif tax_old < tax_new:\n    st.success(f"✅ Old Regime is better. You save ₹{tax_new - tax_old:,}")\nelse:\n    st.success(f"✅ New Regime is better. You save ₹{tax_old - tax_new:,}")\n')

